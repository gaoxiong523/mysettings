<application>
  <component name="AppStorage">
    <histories>
      <item value="Stores a file on the server using the given name and taking input * from the given InputStream. This method does NOT close the given * InputStream. If the current file type is ASCII, line separators in * the file are transparently converted to the NETASCII format (i.e., * you should not attempt to create a special InputStream to do this)." />
      <item value="Stores" />
      <item value="Protocol Command Listener" />
      <item value="deprecated " />
      <item value="Priority Blocking Queue" />
      <item value="Synchronous Queue" />
      <item value="We don't care about the other features of the base class, just want to // handle the request" />
      <item value="features" />
      <item value="This uses a basic token bucket algorithm and relies on the fact that Redis scripts * execute atomically. No other operations can run between fetching the count and * writing the new count." />
      <item value="Resources are loaded from the current thread's * {@link Thread#getContextClassLoader()}. In general, a library needs its * configuration to come from the class loader used to load that library, so * the proper &quot;reference.conf&quot; are present." />
      <item value="Loads an application's configuration from the given classpath resource or * classpath resource basename, sandwiches it between default reference * config and default overrides, and then resolves it. The classpath * resource is &quot;raw&quot; (it should have no &quot;/&quot; prefix, and is not made relative * to any package, so it's like {@link ClassLoader#getResource} not * {@link Class#getResource})." />
      <item value="Defines the set of cascadable operations that are propagated * to the associated entity. * The value &lt;code&gt;cascade=ALL&lt;/code&gt; is equivalent to * &lt;code&gt;cascade={PERSIST, MERGE, REMOVE, REFRESH, DETACH}&lt;/code&gt;." />
      <item value="multiplicity" />
      <item value="association" />
      <item value="Specifies" />
      <item value="Deprecated" />
      <item value="mime" />
      <item value="atob" />
      <item value="vulnerability" />
      <item value="Unsatisfied" />
      <item value="present" />
      <item value="Note, for re-attachment of detached entities this is not possible without select-before-update being enabled." />
      <item value="headless" />
      <item value="Sets if the application is headless and should not instantiate AWT. Defaults to * {@code true} to prevent java icons appearing." />
      <item value="threshold" />
      <item value="Renew" />
      <item value="introspect" />
      <item value="enroll" />
      <item value="architect" />
      <item value="persist" />
      <item value="Configures whether the given query is a native one" />
      <item value="specified" />
      <item value="Returns the number of key-value mappings in this map. If the * map contains more than &lt;tt&gt;Integer.MAX_VALUE&lt;/tt&gt; elements, returns * &lt;tt&gt;Integer.MAX_VALUE&lt;/tt&gt;." />
      <item value="This includes the {@code clone()}, * {@code equals()}, {@code hashCode()} and {@code toString()} methods. * Implementations may optionally handle the self-referential scenario, however * most current implementations do not do so." />
      <item value="Some map operations which perform recursive traversal of the map may fail * with an exception for self-referential instances where the map directly or * indirectly contains itself." />
      <item value="appropriate" />
      <item value="More generally, implementations of * the various Collections Framework interfaces are free to take advantage of * the specified behavior of underlying {@link Object} methods wherever the * implementor deems it appropriate." />
      <item value="for example, by first comparing the hash codes of the two keys. (The * {@link Object#hashCode()} specification guarantees that two objects with * unequal hash codes cannot be equal.)" />
      <item value="specification" />
      <item value="guarantees" />
      <item value="Implementations are free to * implement optimizations whereby the &lt;tt&gt;equals&lt;/tt&gt; invocation is avoided," />
      <item value="This specification should * &lt;i&gt;not&lt;/i&gt; be construed to imply that invoking &lt;tt&gt;Map.containsKey&lt;/tt&gt; * with a non-null argument &lt;tt&gt;key&lt;/tt&gt; will cause &lt;tt&gt;key.equals(k)&lt;/tt&gt; to * be invoked for any key &lt;tt&gt;k&lt;/tt&gt;." />
      <item value="Many methods in Collections Framework interfaces are defined * in terms of the {@link Object#equals(Object) equals} method." />
      <item value="More generally, * attempting an operation on an ineligible key or value whose completion * would not result in the insertion of an ineligible element into the map may * throw an exception or it may succeed, at the option of the implementation. * Such exceptions are marked as &quot;optional&quot; in the specification for this * interface." />
      <item value="ineligible" />
      <item value="Attempting to query the presence of an ineligible key or value may throw an * exception, or it may simply return false; some implementations will exhibit * the former behavior and some will exhibit the latter." />
      <item value="presence" />
      <item value="Attempting" />
      <item value="Attempting * to insert an ineligible key or value throws an unchecked exception," />
      <item value="or example, some implementations prohibit null keys and * values, and some have restrictions on the types of their keys." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="278" />
        <entry key="ENGLISH" value="331" />
        <entry key="FRENCH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translator" value="ai.youdao" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="047c5f8aedf1f7ca" />
        <option name="appKeyConfigured" value="true" />
      </youdao-translate>
    </option>
  </component>
</application>